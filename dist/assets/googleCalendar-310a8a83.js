class a{constructor(){this.isSignedIn=!1,this.gapi=null,this.clientId=null,this.calendarId="primary",this.isInitialized=!1}async initialize(e){if(this.isInitialized)return!0;try{this.clientId=e,window.gapi||await this.loadGoogleAPI(),this.gapi=window.gapi,await new Promise((r,i)=>{this.gapi.load("client:auth2",{callback:r,onerror:i})}),await this.gapi.client.init({clientId:this.clientId,discoveryDocs:["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"],scope:"https://www.googleapis.com/auth/calendar.events"});const t=this.gapi.auth2.getAuthInstance();return this.isSignedIn=t.isSignedIn.get(),this.isInitialized=!0,!0}catch(t){throw console.error("Failed to initialize Google Calendar API:",t),new Error("Failed to initialize Google Calendar API. Please check your Client ID.")}}loadGoogleAPI(){return new Promise((e,t)=>{if(window.gapi){e();return}const r=document.createElement("script");r.src="https://apis.google.com/js/api.js",r.onload=e,r.onerror=t,document.head.appendChild(r)})}async signIn(){if(!this.isInitialized)throw new Error("Google Calendar API not initialized");try{return await this.gapi.auth2.getAuthInstance().signIn(),this.isSignedIn=!0,!0}catch(e){throw console.error("Sign in failed:",e),new Error("Failed to sign in to Google Calendar")}}async signOut(){if(this.isInitialized)try{await this.gapi.auth2.getAuthInstance().signOut(),this.isSignedIn=!1}catch(e){console.error("Sign out failed:",e)}}async getCalendars(){if(!this.isSignedIn)throw new Error("Not signed in to Google Calendar");try{return(await this.gapi.client.calendar.calendarList.list()).result.items||[]}catch(e){throw console.error("Failed to get calendars:",e),new Error("Failed to retrieve calendars")}}setCalendar(e){this.calendarId=e}async createEvent(e){if(!this.isSignedIn)throw new Error("Not signed in to Google Calendar");try{const t=this.convertToGoogleEvent(e);return(await this.gapi.client.calendar.events.insert({calendarId:this.calendarId,resource:t})).result}catch(t){throw console.error("Failed to create event:",t),new Error("Failed to create event in Google Calendar")}}async createEvents(e){if(!this.isSignedIn)throw new Error("Not signed in to Google Calendar");const t=[],r=[];for(const i of e)try{const n=await this.createEvent(i);t.push(n)}catch(n){r.push({event:i,error:n.message})}return{results:t,errors:r}}convertToGoogleEvent(e){const t=new Date(e.date),r=new Date(t);r.setHours(r.getHours()+1);const n={planting:"ðŸŒ±",watering:"ðŸ’§",fertilizing:"ðŸŒ¿",harvesting:"ðŸŒ¾",maintenance:"ðŸ”§"}[e.type]||"ðŸ“…";return{summary:e.title.startsWith(n)?e.title:`${n} ${e.title}`,description:e.description||"",start:{dateTime:t.toISOString(),timeZone:Intl.DateTimeFormat().resolvedOptions().timeZone},end:{dateTime:r.toISOString(),timeZone:Intl.DateTimeFormat().resolvedOptions().timeZone},colorId:this.getEventColorId(e.type),reminders:{useDefault:!1,overrides:[{method:"popup",minutes:60},{method:"popup",minutes:1440}]}}}getEventColorId(e){return{planting:"10",watering:"1",fertilizing:"9",harvesting:"6",maintenance:"8"}[e]||"10"}async getUserInfo(){if(!this.isSignedIn)return null;try{const r=this.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();return{name:r.getName(),email:r.getEmail(),imageUrl:r.getImageUrl()}}catch(e){return console.error("Failed to get user info:",e),null}}}const c=new a;class s{constructor(){this.storageKey="googleCalendarSettings"}save(e){localStorage.setItem(this.storageKey,JSON.stringify(e))}load(){const e=localStorage.getItem(this.storageKey);if(e)try{return JSON.parse(e)}catch(t){console.error("Failed to parse stored settings:",t)}return{clientId:"",selectedCalendarId:"primary",autoSync:!1,syncTypes:{planting:!0,watering:!0,fertilizing:!0,harvesting:!0,maintenance:!0}}}clear(){localStorage.removeItem(this.storageKey)}}const g=new s;export{s as GoogleCalendarSettings,c as googleCalendar,g as googleCalendarSettings};
